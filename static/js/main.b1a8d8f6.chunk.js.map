{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","box.gif","noPreview.png","components/Main.js","components/helpers.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","ipfs","require","ipfsClient","host","port","protocol","Component","componentDidMount","loadWeb3","loadBlockchainData","ethereum","on","accounts","reload","detectEthereumProvider","provider","web3","Web3","request","method","console","error","eth","getAccounts","setState","account","net","getId","networkId","networkData","DStorage","networks","dcloud","Contract","abi","address","methods","fileCount","call","i","files","file","log","state","loading","alert","constructor","props","super","captureFile","event","preventDefault","target","reader","FileReader","readAsArrayBuffer","onloadend","this","buffer","Buffer","result","type","name","uploadFile","description","add","hash","size","send","from","e","bind","id","className","Navbar","src","box","width","height","alt","Identicon","toString","module","exports","Main","role","style","maxWidth","borderRadius","background","padding","border","onSubmit","fileDescription","value","ref","input","placeholder","required","onChange","display","gridGap","gridTemplateColumns","map","key","uploader","href","rel","fontSize","fileType","startsWith","fileHash","controls","noPreview","margin","marginTop","moment","unix","uploadTime","format","bytes","parseInt","Math","floor","round","pow","convertBytes","fileSize","substring"],"mappings":"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","file":"static/js/main.b1a8d8f6.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import DStorage from '../abis/DStorage.json'\nimport React, { Component } from 'react';\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Web3 from 'web3';\nimport './App.css';\nimport detectEthereumProvider from \"@metamask/detect-provider\";\n\n//Declare IPFS\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass App extends Component {\n\n  async componentDidMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n    await window.ethereum.on('accountsChanged', (accounts)=> {\n      window.location.reload(false);\n    })\n  }\n\n  async loadWeb3() {\n    const provider = await detectEthereumProvider();\n\n    if (provider) {\n      // setAccountListener(provider);\n      window.web3 = new Web3(provider)\n      provider.request({ method: \"eth_requestAccounts\" });\n\n      \n    } else {\n      console.error(\"Please install MetaMask!\");\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = DStorage.networks[networkId]\n    if(networkData) {\n      const dcloud = new web3.eth.Contract(DStorage.abi, networkData.address)\n      this.setState({ dcloud })\n      const fileCount = await dcloud.methods.fileCount().call()\n      this.setState({ fileCount })\n\n      // Load files\n      for (var i = 1; i <= fileCount; i++) {\n        const file = await dcloud.methods.files(i).call()\n        console.log(file)\n        this.setState({\n          files: [...this.state.files, file]\n        })\n      }\n      this.setState({ loading: false})\n    } else {\n      window.alert('d-cloud contract not deployed to detected network.')\n    }\n\n  }\n\n  // Get file from user\n  captureFile = event => {\n\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ \n        buffer: Buffer(reader.result),\n        type: file.type,\n        name: file.name\n\n       })\n      console.log('buffer', this.state.buffer)\n    }\n\n  }\n\n\n  //Upload File\n  uploadFile = description => {\n    console.log(\"Submitting file to ipfs...\")\n\n    //adding file to the IPFS\n    ipfs.add(this.state.buffer, (error, result) => {\n      console.log('Ipfs result', result)\n      if(error) {\n        console.error(error)\n        return\n      }\n\n        this.setState({ loading: true });\n        \n        if(this.state.type === ''){\n          this.setState({type : 'none'});\n        }\n\n        this.state.dcloud.methods.uploadFile(result[0].hash, result[0].size, this.state.type, this.state.name, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\n          this.setState({\n           loading: false,\n           type: null,\n           name: null\n         })\n         window.location.reload()\n        }).on('error', (e) =>{\n          window.alert('Error')\n          this.setState({loading: false})\n        })\n      })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      dcloud: null,\n      files: [],\n      loading: true,\n      type : null,\n      name: null\n    }\n\n    this.uploadFile = this.uploadFile.bind(this)\n    this.captureFile = this.captureFile.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n              files={this.state.files}\n              captureFile={this.captureFile}\n              uploadFile={this.uploadFile}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport box from '../box.gif'\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar p-0\">\n        <div className='d-flex flex-row align-items-center'>\n        <img src={box} width=\"100\" height=\"100\" className=\"align-top\" alt=\"\" />\n        <h1>\n          D-Cloud\n        </h1>\n        </div>\n\n        <div>\n        <ul className=\"navbar-nav px-3\">\n        <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n              alt='profileimg'\n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span></span>\n            }\n          </li>\n        </ul>\n        </div>\n      \n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","module.exports = __webpack_public_path__ + \"static/media/box.211379fc.gif\";","module.exports = __webpack_public_path__ + \"static/media/noPreview.659728a5.png\";","import React, { Component } from \"react\";\nimport { convertBytes } from \"./helpers\";\nimport moment from \"moment\";\nimport Identicon from \"identicon.js\";\nimport noPreview from \"/Users/jashvavadiya/D-Cloud/src/noPreview.png\";\n\nclass Main extends Component {\n  render() {\n    return (\n      <div className=\"container-fluid mt-5 text-center\">\n        <div className=\"row\">\n          <main\n            role=\"main\"\n            className=\"col-lg-12 ml-auto mr-auto\"\n            style={{ maxWidth: \"1239px\" }}\n          >\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <div\n                className=\"mb-3 mx-auto \"\n                style={{\n                  maxWidth: \"512px\",\n                  borderRadius: \"10px\",\n                  background: \"rgb(248 235 233)\",\n                  padding: \"20px\",\n                  border: \"2px solid rgb(237 224 222)\",\n                }}\n              >\n                <h2>\n                  <b>Share File</b>\n                </h2>\n                <form\n                  onSubmit={(event) => {\n                    event.preventDefault();\n                    const description = this.fileDescription.value;\n                    this.props.uploadFile(description);\n                  }}\n                >\n                  <div className=\"form-group\">\n                    <br></br>\n                    <input\n                      id=\"fileDescription\"\n                      type=\"text\"\n                      ref={(input) => {\n                        this.fileDescription = input;\n                      }}\n                      className=\"form-control\"\n                      placeholder=\"description...\"\n                      required\n                    />\n                  </div>\n                  <input\n                    type=\"file\"\n                    onChange={this.props.captureFile}\n                    className=\"\"\n                  />\n                  <button\n                    type=\"submit\"\n                    style={{\n                      background: \"#f39f0e\",\n                      border: \"1px solid #563c2a\",\n                    }}\n                    className=\"btn-block my-3\"\n                  >\n                    <b>Upload!</b>\n                  </button>\n                </form>\n              </div>\n              <p>&nbsp;</p>\n\n              <div\n                className=\"grid-container\"\n                style={{\n                  display: \"grid\",\n                  gridGap: \"20px\",\n                  gridTemplateColumns: \"auto auto auto auto\",\n                }}\n              >\n                {this.props.files.map((file, key) => {\n                  return (\n                    <div>\n                      <div\n                        className=\"grid-item\"\n                        key={key}\n                        style={{ width: \"18rem\" }}\n                      >\n                        <div className=\"d-flex justify-content-start  overflow-auto\">\n                          <img\n                            alt=\"icon\"\n                            className=\"mr-2\"\n                            width=\"20\"\n                            height=\"20\"\n                            src={`data:image/png;base64,${new Identicon(\n                              file.uploader,\n                              30\n                            ).toString()}`}\n                          />\n                          <a\n                            href={\n                              \"https://etherscan.io/address/\" + file.uploader\n                            }\n                            rel=\"noopener noreferrer\"\n                            target=\"_blank\"\n                            style={{ fontSize: \"14px\" }}\n                          >\n                            {file.uploader}\n                          </a>\n                        </div>\n                        <hr></hr>\n                        <div>\n                          {file.fileType.startsWith(\"image/\") ? (\n                            <img\n                              className=\"card-img-top\"\n                              src={\n                                \"https://ipfs.infura.io/ipfs/\" + file.fileHash\n                              }\n                              alt=\"Cardimagecap\"\n                            />\n                          ) : file.fileType.startsWith(\"video/\") ? (\n                            <video\n                              className=\"card-img-top\"\n                              controls\n                              src={\n                                \"https://ipfs.infura.io/ipfs/\" + file.fileHash\n                              }\n                            />\n                          ) : (\n                            <img\n                              className=\"card-img-top\"\n                              src={noPreview}\n                              alt=\"Cardimagecap\"\n                            />\n                          )}\n                        </div>\n                        <h5>{file.fileDescription}</h5>\n                        <hr style={{ margin: \"0px\" }}></hr>\n                        <div>\n                          <h6 style={{ fontSize: \"12px\", marginTop: \"5px\" }}>\n                            {moment\n                              .unix(file.uploadTime)\n                              .format(\"h:mm:ss A M/D/Y\")}\n                          </h6>\n                          <h6 style={{ fontSize: \"12px\", marginTop: \"5px\" }}>\n                            {convertBytes(file.fileSize)}\n                          </h6>\n                          <div style={{ fontSize: \"12px\" }}>\n                            <a\n                              href={\n                                \"https://ipfs.infura.io/ipfs/\" + file.fileHash\n                              }\n                              rel=\"noopener noreferrer\"\n                              style={{ fontSize: \"12px\", marginTop: \"-10px\" }}\n                              target=\"_blank\"\n                            >\n                              Full preview : {file.fileHash.substring(0, 10)}...\n                            </a>\n                            <h6 style={{ fontSize: \"12px\" }}>\n                              {file.fileType}\n                            </h6>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","export function convertBytes(bytes) {\r\n   var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n   if (bytes === 0) return '0 Byte';\r\n   var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));\r\n   return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];\r\n}"],"sourceRoot":""}